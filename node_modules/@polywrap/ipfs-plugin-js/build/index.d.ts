/// <reference types="node" />
import { Module, Args_resolve, Args_addFile, Args_cat, Ipfs_ResolveResult } from "./wrap";
import { Client, PluginFactory } from "@polywrap/core-js";
export interface IpfsPluginConfig {
    provider: string;
    fallbackProviders?: string[];
}
export declare class IpfsPlugin extends Module<IpfsPluginConfig> {
    private _ipfs;
    constructor(config: IpfsPluginConfig);
    cat(args: Args_cat, _client: Client): Promise<Buffer>;
    resolve(args: Args_resolve, _client: Client): Promise<Ipfs_ResolveResult | null>;
    addFile(args: Args_addFile): Promise<string>;
    private _execWithOptions;
}
export declare const ipfsPlugin: PluginFactory<IpfsPluginConfig>;
export declare const plugin: PluginFactory<IpfsPluginConfig>;
