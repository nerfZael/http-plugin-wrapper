import { ScalarType } from "./scalar";
import { MapKeyType } from "./map";
export declare enum DefinitionKind {
    Generic = 0,
    Object = 1,
    Any = 2,
    Scalar = 4,
    Enum = 8,
    Array = 18,
    Property = 34,
    Method = 64,
    Module = 128,
    ImportedModule = 256,
    ImportedEnum = 520,
    ImportedObject = 1025,
    InterfaceImplemented = 2048,
    UnresolvedObjectOrEnum = 4096,
    ObjectRef = 8192,
    EnumRef = 16384,
    Interface = 32768,
    Env = 65536,
    MapKey = 131072,
    Map = 262146,
    ImportedEnv = 524288
}
export declare function isKind(type: WithKind, kind: DefinitionKind): boolean;
export interface WithComment {
    comment?: string;
}
export interface WithKind {
    kind: DefinitionKind;
}
export interface GenericDefinition extends WithKind {
    type: string;
    name: string | null;
    required: boolean | null;
}
export declare function createGenericDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
}): GenericDefinition;
export interface ObjectDefinition extends GenericDefinition, WithComment {
    properties: PropertyDefinition[];
    interfaces: InterfaceImplementedDefinition[];
}
export declare function createObjectDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    properties?: PropertyDefinition[];
    interfaces?: InterfaceImplementedDefinition[];
    comment?: string;
}): ObjectDefinition;
export declare type ObjectRef = GenericDefinition;
export declare function createObjectRef(args: {
    type: string;
    name?: string | null;
    required?: boolean;
}): ObjectRef;
export interface AnyDefinition extends GenericDefinition {
    array: ArrayDefinition | null;
    scalar: ScalarDefinition | null;
    map: MapDefinition | null;
    object: ObjectRef | null;
    enum: EnumRef | null;
    unresolvedObjectOrEnum: UnresolvedObjectOrEnumRef | null;
}
export declare function createAnyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    array?: ArrayDefinition;
    map?: MapDefinition;
    scalar?: ScalarDefinition;
    object?: ObjectRef;
    enum?: EnumRef;
}): AnyDefinition;
export interface MapKeyDefinition extends GenericDefinition {
    type: MapKeyType;
}
export declare function createMapKeyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
}): MapKeyDefinition;
export interface ScalarDefinition extends GenericDefinition {
    type: ScalarType;
}
export declare function createScalarDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
}): ScalarDefinition;
export interface EnumDefinition extends GenericDefinition, WithComment {
    constants: string[];
}
export declare function createEnumDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    constants?: string[];
    comment?: string;
}): EnumDefinition;
export declare type EnumRef = GenericDefinition;
export declare function createEnumRef(args: {
    type: string;
    name?: string | null;
    required?: boolean;
}): EnumRef;
export declare type UnresolvedObjectOrEnumRef = GenericDefinition;
export declare function createUnresolvedObjectOrEnumRef(args: {
    type: string;
    name?: string | null;
    required?: boolean;
}): UnresolvedObjectOrEnumRef;
export interface MapDefinition extends AnyDefinition, WithComment {
    key: MapKeyDefinition | null;
    value: GenericDefinition | null;
}
export declare function createMapDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    key?: MapKeyDefinition;
    value?: GenericDefinition | null;
}): MapDefinition;
export interface ArrayDefinition extends AnyDefinition {
    item: GenericDefinition | null;
}
export declare function createArrayDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    item?: GenericDefinition;
}): ArrayDefinition;
export declare type PropertyDefinition = AnyDefinition & WithComment;
export declare function createPropertyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    array?: ArrayDefinition;
    map?: MapDefinition;
    scalar?: ScalarDefinition;
    object?: ObjectRef;
    enum?: EnumRef;
    comment?: string;
}): PropertyDefinition;
export declare type InterfaceImplementedDefinition = GenericDefinition;
export declare function createInterfaceImplementedDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    array?: ArrayDefinition;
    map?: MapDefinition;
    scalar?: ScalarDefinition;
    object?: ObjectDefinition;
    enum?: EnumDefinition;
}): InterfaceImplementedDefinition;
export declare function createArrayPropertyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    item?: GenericDefinition;
    comment?: string;
}): PropertyDefinition;
export declare function createMapPropertyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    key: MapKeyDefinition;
    value?: GenericDefinition;
    comment?: string;
}): PropertyDefinition;
export declare function createScalarPropertyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    comment?: string;
}): PropertyDefinition;
export declare function createEnumPropertyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    constants?: string[];
    comment?: string;
}): PropertyDefinition;
export declare function createObjectPropertyDefinition(args: {
    type: string;
    name?: string | null;
    required?: boolean;
    properties?: PropertyDefinition[];
    comment?: string;
}): PropertyDefinition;
export interface MethodDefinition extends GenericDefinition, WithComment {
    arguments: PropertyDefinition[];
    env?: {
        required: boolean;
    };
    return: PropertyDefinition;
}
export declare function createMethodDefinition(args: {
    name: string;
    arguments?: PropertyDefinition[];
    env?: {
        required: boolean;
    };
    return: PropertyDefinition;
    comment?: string;
}): MethodDefinition;
export interface ModuleDefinition extends GenericDefinition, WithComment {
    methods: MethodDefinition[];
    imports: {
        type: string;
    }[];
    interfaces: InterfaceImplementedDefinition[];
}
export declare function createModuleDefinition(args: {
    imports?: {
        type: string;
    }[];
    interfaces?: InterfaceImplementedDefinition[];
    required?: boolean;
    comment?: string;
}): ModuleDefinition;
export interface ImportedDefinition {
    uri: string;
    namespace: string;
    nativeType: string;
}
export interface ImportedEnumDefinition extends EnumDefinition, ImportedDefinition, WithComment {
}
export declare function createImportedEnumDefinition(args: {
    type: string;
    constants: string[];
    name?: string;
    required?: boolean;
    uri: string;
    namespace: string;
    nativeType: string;
    comment?: string;
}): ImportedEnumDefinition;
export declare const capabilityTypes: readonly ["getImplementations"];
export declare type CapabilityType = typeof capabilityTypes[number];
export interface Capability {
    enabled: boolean;
}
export declare function createCapability(args: {
    type: CapabilityType;
    enabled: boolean;
}): CapabilityDefinition;
export declare type CapabilityDefinition = Record<CapabilityType, Capability>;
export interface InterfaceDefinition extends GenericDefinition, ImportedDefinition {
    capabilities: CapabilityDefinition;
}
export declare function createInterfaceDefinition(args: {
    type: string;
    required?: boolean;
    namespace: string;
    uri: string;
    capabilities: CapabilityDefinition;
}): InterfaceDefinition;
export interface ImportedModuleDefinition extends GenericDefinition, ImportedDefinition, WithComment {
    methods: MethodDefinition[];
    isInterface?: boolean;
}
export declare function createImportedModuleDefinition(args: {
    required?: boolean;
    uri: string;
    namespace: string;
    nativeType: string;
    isInterface?: boolean;
    interfaces?: InterfaceImplementedDefinition[];
    comment?: string;
}): ImportedModuleDefinition;
export interface ImportedObjectDefinition extends ObjectDefinition, ImportedDefinition, WithComment {
}
export declare function createImportedObjectDefinition(args: {
    type: string;
    name?: string;
    required?: boolean;
    uri: string;
    namespace: string;
    nativeType: string;
    interfaces?: InterfaceImplementedDefinition[];
    comment?: string;
}): ImportedObjectDefinition;
export declare type EnvDefinition = ObjectDefinition;
export declare function createEnvDefinition(args: {
    name?: string | null;
    required?: boolean;
    properties?: PropertyDefinition[];
    interfaces?: InterfaceImplementedDefinition[];
    comment?: string;
}): EnvDefinition;
export declare type ImportedEnvDefinition = ImportedObjectDefinition;
export declare function createImportedEnvDefinition(args: {
    type: string;
    name?: string;
    required?: boolean;
    uri: string;
    namespace: string;
    nativeType: string;
    interfaces?: InterfaceImplementedDefinition[];
    comment?: string;
}): ImportedEnvDefinition;
