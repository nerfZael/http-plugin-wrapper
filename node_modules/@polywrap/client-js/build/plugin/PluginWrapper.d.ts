import { Wrapper, Client, InvokeOptions, InvocableResult, PluginPackage, Uri, GetFileOptions, Env, GetManifestOptions } from "@polywrap/core-js";
import { WrapManifest } from "@polywrap/wrap-manifest-types-js";
export declare class PluginWrapper extends Wrapper {
    private _uri;
    private _plugin;
    private _clientEnv?;
    private _instance;
    constructor(_uri: Uri, _plugin: PluginPackage<unknown>, _clientEnv?: Env<Uri> | undefined);
    getFile(_options: GetFileOptions, _client: Client): Promise<Uint8Array | string>;
    getSchema(_client: Client): Promise<string>;
    getManifest(_options: GetManifestOptions, _client: Client): Promise<WrapManifest>;
    invoke(options: InvokeOptions<Uri>, client: Client): Promise<InvocableResult<unknown>>;
    private _getInstance;
    private _getClientEnv;
}
