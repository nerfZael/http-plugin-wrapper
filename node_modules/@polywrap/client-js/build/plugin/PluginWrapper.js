"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PluginWrapper = void 0;
var core_js_1 = require("@polywrap/core-js");
var msgpack_js_1 = require("@polywrap/msgpack-js");
var tracing_js_1 = require("@polywrap/tracing-js");
var PluginWrapper = /** @class */ (function (_super) {
    __extends(PluginWrapper, _super);
    function PluginWrapper(_uri, _plugin, _clientEnv) {
        var _this = _super.call(this) || this;
        _this._uri = _uri;
        _this._plugin = _plugin;
        _this._clientEnv = _clientEnv;
        tracing_js_1.Tracer.startSpan("PluginWrapper: constructor");
        tracing_js_1.Tracer.setAttribute("args", {
            uri: _this._uri,
            plugin: _this._plugin,
            clientEnv: _this._clientEnv,
        });
        tracing_js_1.Tracer.endSpan();
        return _this;
    }
    PluginWrapper.prototype.getFile = function (_options, _client) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw Error("client.getFile(...) is not implemented for Plugins.");
            });
        });
    };
    PluginWrapper.prototype.getSchema = function (_client) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, Promise.resolve(this._plugin.manifest.schema)];
            });
        });
    };
    PluginWrapper.prototype.getManifest = function (_options, _client) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw Error("client.getManifest(...) is not implemented for Plugins.");
            });
        });
    };
    PluginWrapper.prototype.invoke = function (options, client) {
        return __awaiter(this, void 0, void 0, function () {
            var method, args, module_1, jsArgs, result, result, data, e_1, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 6, , 7]);
                        method = options.method;
                        args = options.args || {};
                        module_1 = this._getInstance();
                        if (!module_1) {
                            throw new Error("PluginWrapper: module \"" + module_1 + "\" not found.");
                        }
                        if (!module_1.getMethod(method)) {
                            throw new Error("PluginWrapper: method \"" + method + "\" not found.");
                        }
                        // Set the module's environment
                        return [4 /*yield*/, module_1.setEnv(this._getClientEnv() || {})];
                    case 1:
                        // Set the module's environment
                        _a.sent();
                        jsArgs = void 0;
                        // If the args are a msgpack buffer, deserialize it
                        if (core_js_1.isBuffer(args)) {
                            result = msgpack_js_1.msgpackDecode(args);
                            tracing_js_1.Tracer.addEvent("msgpack-decoded", result);
                            if (typeof result !== "object") {
                                throw new Error("PluginWrapper: decoded MsgPack args did not result in an object.\nResult: " + result);
                            }
                            jsArgs = result;
                        }
                        else {
                            jsArgs = args;
                        }
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, module_1._wrap_invoke(method, jsArgs, client)];
                    case 3:
                        result = _a.sent();
                        if (result !== undefined) {
                            data = result;
                            tracing_js_1.Tracer.addEvent("Result", data);
                            return [2 /*return*/, {
                                    data: data,
                                    encoded: false,
                                }];
                        }
                        else {
                            return [2 /*return*/, {}];
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        e_1 = _a.sent();
                        throw Error("PluginWrapper: invocation exception encountered.\n" +
                            ("uri: " + this._uri.uri + "\nmodule: " + module_1 + "\n") +
                            ("method: " + method + "\n") +
                            ("args: " + JSON.stringify(jsArgs, null, 2) + "\n") +
                            ("exception: " + e_1.message));
                    case 5: return [3 /*break*/, 7];
                    case 6:
                        error_1 = _a.sent();
                        return [2 /*return*/, {
                                error: error_1,
                            }];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    PluginWrapper.prototype._getInstance = function () {
        this._instance || (this._instance = this._plugin.factory());
        return this._instance;
    };
    PluginWrapper.prototype._getClientEnv = function () {
        var _a;
        if (!((_a = this._clientEnv) === null || _a === void 0 ? void 0 : _a.env)) {
            return {};
        }
        return this._clientEnv.env;
    };
    __decorate([
        tracing_js_1.Tracer.traceMethod("PluginWrapper: invoke")
    ], PluginWrapper.prototype, "invoke", null);
    __decorate([
        tracing_js_1.Tracer.traceMethod("PluginWrapper: _getClientEnv")
    ], PluginWrapper.prototype, "_getClientEnv", null);
    return PluginWrapper;
}(core_js_1.Wrapper));
exports.PluginWrapper = PluginWrapper;
//# sourceMappingURL=PluginWrapper.js.map