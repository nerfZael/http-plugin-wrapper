"use strict";
/* eslint-disable */
/**
 * This file was automatically generated by scripts/manifest/deserialize-ts.mustache.
 * DO NOT MODIFY IT BY HAND. Instead, modify scripts/manifest/deserialize-ts.mustache,
 * and run ts-node ./scripts/generateWrapManifestTypes.ts to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeWrapManifest = void 0;
var _1 = require(".");
var msgpack_js_1 = require("@polywrap/msgpack-js");
var semver_1 = require("semver");
function deserializeWrapManifest(manifest, options) {
    var anyWrapManifest;
    try {
        anyWrapManifest = msgpack_js_1.msgpackDecode(manifest);
    }
    catch (e) {
        throw Error("Unable to parse WrapManifest: " + ("[" + new Uint8Array(manifest).toString() + "]"));
    }
    if (!options || !options.noValidate) {
        _1.validateWrapManifest(anyWrapManifest);
    }
    var versionCompare = semver_1.compare(anyWrapManifest.version, _1.latestWrapManifestVersion);
    if (versionCompare === -1) {
        // Upgrade
        return _1.migrateWrapManifest(anyWrapManifest, _1.latestWrapManifestVersion);
    }
    else if (versionCompare === 1) {
        // Downgrade
        throw Error("Cannot downgrade WrapManifest version " + anyWrapManifest.version + ", please upgrade your WRAP package.");
    }
    else {
        // Latest
        return anyWrapManifest;
    }
}
exports.deserializeWrapManifest = deserializeWrapManifest;
//# sourceMappingURL=deserialize.js.map