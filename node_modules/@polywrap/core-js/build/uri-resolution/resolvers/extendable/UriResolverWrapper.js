"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UriResolverWrapper = void 0;
var interfaces_1 = require("../../../interfaces");
var types_1 = require("../../../types");
var getEnvFromUriOrResolutionStack_1 = require("../getEnvFromUriOrResolutionStack");
var wrap_manifest_types_js_1 = require("@polywrap/wrap-manifest-types-js");
var tracing_js_1 = require("@polywrap/tracing-js");
var UriResolverWrapper = /** @class */ (function () {
    function UriResolverWrapper(implementationUri, createWrapper, deserializeOptions) {
        this.implementationUri = implementationUri;
        this.createWrapper = createWrapper;
        this.deserializeOptions = deserializeOptions;
    }
    Object.defineProperty(UriResolverWrapper.prototype, "name", {
        get: function () {
            return UriResolverWrapper.name;
        },
        enumerable: false,
        configurable: true
    });
    UriResolverWrapper.prototype.resolveUri = function (uri, client, cache, resolutionPath) {
        return __awaiter(this, void 0, void 0, function () {
            var result, manifest, environment, wrapper;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, tryResolveUriWithImplementation(uri, this.implementationUri, client)];
                    case 1:
                        result = _a.sent();
                        if (!result) {
                            return [2 /*return*/, {
                                    uri: uri,
                                }];
                        }
                        if (result.uri) {
                            return [2 /*return*/, {
                                    uri: new types_1.Uri(result.uri),
                                }];
                        }
                        else if (result.manifest) {
                            manifest = wrap_manifest_types_js_1.deserializeWrapManifest(result.manifest, this.deserializeOptions);
                            environment = getEnvFromUriOrResolutionStack_1.getEnvFromUriOrResolutionStack(uri, resolutionPath, client);
                            wrapper = this.createWrapper(uri, manifest, this.implementationUri.uri, environment);
                            return [2 /*return*/, {
                                    uri: uri,
                                    wrapper: wrapper,
                                }];
                        }
                        return [2 /*return*/, {
                                uri: uri,
                            }];
                }
            });
        });
    };
    return UriResolverWrapper;
}());
exports.UriResolverWrapper = UriResolverWrapper;
var tryResolveUriWithImplementation = function (uri, implementationUri, invoker) { return __awaiter(void 0, void 0, void 0, function () {
    var data;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, interfaces_1.UriResolverInterface.module.tryResolveUri(invoker, implementationUri, uri)];
            case 1:
                data = (_a.sent()).data;
                // If nothing was returned, the URI is not supported
                if (!data || (!data.uri && !data.manifest)) {
                    tracing_js_1.Tracer.addEvent("continue", implementationUri.uri);
                    return [2 /*return*/, undefined];
                }
                return [2 /*return*/, data];
        }
    });
}); };
//# sourceMappingURL=UriResolverWrapper.js.map