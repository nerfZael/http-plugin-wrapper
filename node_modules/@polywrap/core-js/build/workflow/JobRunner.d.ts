import { Client, Job, JobResult, MaybeAsync, Uri } from "../types";
export interface JobRunOptions<TUri extends Uri | string = string> {
    relativeId: string;
    parentId: string;
    jobs: Job<TUri>;
}
export declare class JobRunner<TData extends unknown = unknown, TUri extends Uri | string = string> {
    private client;
    private onExecution?;
    private jobOutput;
    constructor(client: Client, onExecution?: ((id: string, JobResult: JobResult<TData>) => MaybeAsync<void>) | undefined);
    run(opts: JobRunOptions<TUri>): Promise<void>;
    resolveArgs(absCurStepId: string, args: Record<string, unknown>): Record<string, unknown>;
}
