"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.propertyDeps = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable no-useless-escape */
var types_1 = require("../types");
function propertyDeps() {
    var state = {};
    return {
        enter: {
            EnvDefinition: function (def) {
                state.envDefinition = def;
                state.propertyDeps = [];
                return def;
            },
            ObjectDefinition: function (def) {
                state.objectDefinition = def;
                state.propertyDeps = [];
                return def;
            },
            ModuleDefinition: function (def) {
                state.moduleDefinition = def;
                state.propertyDeps = [];
                return def;
            },
            ImportedModuleDefinition: function (def) {
                state.importedModuleDefinition = def;
                state.propertyDeps = [];
                return def;
            },
            AnyDefinition: function (def) {
                var appendPropertyDep = function (rootType, array) {
                    var typeName = def.type;
                    if (typeName.indexOf("[") === 0) {
                        typeName = typeName.replace(/\[|\]|\!|\?/g, "");
                    }
                    if (types_1.isBaseType(typeName) ||
                        types_1.isBuiltInType(typeName) ||
                        typeName === rootType) {
                        return array;
                    }
                    var appendUnique = function (item) {
                        if (array.findIndex(function (i) { return i.crate === item.crate && i.type === item.type; }) === -1) {
                            array.push(item);
                        }
                    };
                    appendUnique({
                        crate: "crate",
                        type: typeName,
                        isEnum: !!def.enum,
                    });
                    return array;
                };
                if (state.envDefinition && state.propertyDeps) {
                    state.propertyDeps = appendPropertyDep(state.envDefinition.type, state.propertyDeps);
                }
                else if (state.objectDefinition && state.propertyDeps) {
                    state.propertyDeps = appendPropertyDep(state.objectDefinition.type, state.propertyDeps);
                }
                else if (state.moduleDefinition && state.propertyDeps) {
                    state.propertyDeps = appendPropertyDep(state.moduleDefinition.type, state.propertyDeps);
                }
                else if (state.importedModuleDefinition && state.propertyDeps) {
                    state.propertyDeps = appendPropertyDep(state.importedModuleDefinition.type, state.propertyDeps);
                }
                return def;
            },
        },
        leave: {
            EnvDefinition: function (def) {
                var propertyDeps = state.propertyDeps;
                state.propertyDeps = undefined;
                state.envDefinition = undefined;
                return __assign(__assign({}, def), { propertyDeps: propertyDeps });
            },
            ObjectDefinition: function (def) {
                var propertyDeps = state.propertyDeps;
                state.propertyDeps = undefined;
                state.objectDefinition = undefined;
                return __assign(__assign({}, def), { propertyDeps: propertyDeps });
            },
            ModuleDefinition: function (def) {
                var propertyDeps = state.propertyDeps;
                state.propertyDeps = undefined;
                state.moduleDefinition = undefined;
                return __assign(__assign({}, def), { propertyDeps: propertyDeps });
            },
            ImportedModuleDefinition: function (def) {
                var propertyDeps = state.propertyDeps;
                state.propertyDeps = undefined;
                state.importedModuleDefinition = undefined;
                return __assign(__assign({}, def), { propertyDeps: propertyDeps });
            },
        },
    };
}
exports.propertyDeps = propertyDeps;
//# sourceMappingURL=propertyDeps.js.map