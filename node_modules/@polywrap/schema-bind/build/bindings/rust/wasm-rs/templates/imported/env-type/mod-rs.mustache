use serde::{Serialize, Deserialize};
pub mod serialization;
use polywrap_wasm_rs::{
    BigInt,
    BigNumber,
    Map,
    DecodeError,
    EncodeError,
    Read,
    Write,
    JSON,
};
pub use serialization::{
    deserialize_{{#toLower}}{{type}}{{/toLower}},
    read_{{#toLower}}{{type}}{{/toLower}},
    serialize_{{#toLower}}{{type}}{{/toLower}},
    write_{{#toLower}}{{type}}{{/toLower}}
};
{{#propertyDeps.length}}

{{#propertyDeps}}
use {{crate}}::{{#toUpper}}{{type}}{{/toUpper}};
{{/propertyDeps}}
{{/propertyDeps.length}}

#[derive(Clone, Debug, Deserialize, Serialize)]
pub struct {{#toUpper}}{{type}}{{/toUpper}} {
    {{#properties}}
    pub {{#detectKeyword}}{{#toLower}}{{name}}{{/toLower}}{{/detectKeyword}}: {{#toWasm}}{{toGraphQLType}}{{/toWasm}},
    {{/properties}}
}

impl {{#toUpper}}{{type}}{{/toUpper}} {
    pub const URI: &'static str = "{{uri}}";

    pub fn new() -> {{#toUpper}}{{type}}{{/toUpper}} {
        {{#toUpper}}{{type}}{{/toUpper}} {
            {{#properties}}
            {{#detectKeyword}}{{#toLower}}{{name}}{{/toLower}}{{/detectKeyword}}: {{#toWasmInit}}{{toGraphQLType}}{{/toWasmInit}},
            {{/properties}}
        }
    }

    pub fn to_buffer(args: &{{#toUpper}}{{type}}{{/toUpper}}) -> Result<Vec<u8>, EncodeError> {
        serialize_{{#toLower}}{{type}}{{/toLower}}(args).map_err(|e| EncodeError::TypeWriteError(e.to_string()))
    }

    pub fn from_buffer(args: &[u8]) -> Result<{{#toUpper}}{{type}}{{/toUpper}}, DecodeError> {
        deserialize_{{#toLower}}{{type}}{{/toLower}}(args).map_err(|e| DecodeError::TypeReadError(e.to_string()))
    }

    pub fn write<W: Write>(args: &{{#toUpper}}{{type}}{{/toUpper}}, writer: &mut W) -> Result<(), EncodeError> {
        write_{{#toLower}}{{type}}{{/toLower}}(args, writer).map_err(|e| EncodeError::TypeWriteError(e.to_string()))
    }

    pub fn read<R: Read>(reader: &mut R) -> Result<{{#toUpper}}{{type}}{{/toUpper}}, DecodeError> {
        read_{{#toLower}}{{type}}{{/toLower}}(reader).map_err(|e| DecodeError::TypeReadError(e.to_string()))
    }
}
