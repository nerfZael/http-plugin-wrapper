"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateBinding = exports.Functions = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
var Functions = __importStar(require("../functions"));
exports.Functions = Functions;
var templates_1 = require("../../utils/templates");
var schema_parse_1 = require("@polywrap/schema-parse");
var path_1 = __importDefault(require("path"));
exports.generateBinding = function (options) {
    var result = {
        output: {
            entries: [],
        },
        outputDirAbs: options.outputDirAbs,
    };
    var output = result.output;
    var schema = options.schema;
    var abi = applyTransforms(options.abi);
    output.entries = templates_1.renderTemplates(path_1.default.join(__dirname, "./templates"), __assign(__assign({}, abi), { schema: schema }), {});
    return result;
};
function applyTransforms(abi) {
    var e_1, _a;
    var transforms = [
        schema_parse_1.extendType(Functions),
        schema_parse_1.addFirstLast,
        schema_parse_1.toPrefixedGraphQLType,
        schema_parse_1.methodParentPointers(),
    ];
    try {
        for (var transforms_1 = __values(transforms), transforms_1_1 = transforms_1.next(); !transforms_1_1.done; transforms_1_1 = transforms_1.next()) {
            var transform = transforms_1_1.value;
            abi = schema_parse_1.transformAbi(abi, transform);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (transforms_1_1 && !transforms_1_1.done && (_a = transforms_1.return)) _a.call(transforms_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return abi;
}
//# sourceMappingURL=index.js.map