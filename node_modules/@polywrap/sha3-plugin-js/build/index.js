"use strict";
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/naming-convention */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.plugin = exports.sha3Plugin = exports.Sha3Plugin = void 0;
var wrap_1 = require("./wrap");
var js_sha3_1 = require("js-sha3");
var Sha3Plugin = /** @class */ (function (_super) {
    __extends(Sha3Plugin, _super);
    function Sha3Plugin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Sha3Plugin.prototype.sha3_512 = function (args) {
        return js_sha3_1.sha3_512(args.message);
    };
    Sha3Plugin.prototype.sha3_384 = function (args) {
        return js_sha3_1.sha3_384(args.message);
    };
    Sha3Plugin.prototype.sha3_256 = function (args) {
        return js_sha3_1.sha3_256(args.message);
    };
    Sha3Plugin.prototype.sha3_224 = function (args) {
        return js_sha3_1.sha3_224(args.message);
    };
    Sha3Plugin.prototype.keccak_512 = function (args) {
        return js_sha3_1.keccak_512(args.message);
    };
    Sha3Plugin.prototype.keccak_384 = function (args) {
        return js_sha3_1.keccak_384(args.message);
    };
    Sha3Plugin.prototype.keccak_256 = function (args) {
        return js_sha3_1.keccak_256(args.message);
    };
    Sha3Plugin.prototype.hex_keccak_256 = function (args) {
        // remove the leading 0x
        var hexString = args.message.replace(/^0x/, "");
        // ensure even number of characters
        if (hexString.length % 2 != 0) {
            throw Error("expecting an even number of characters in the hexString: " + hexString.length);
        }
        // check for some non-hex characters
        var bad = hexString.match(/[G-Z\s]/i);
        if (bad) {
            throw Error("found non-hex characters: " + bad);
        }
        // split the string into pairs of octets
        var pairs = hexString.match(/[\dA-F]{2}/gi);
        if (!pairs) {
            throw Error("Invalid hexString, unable to split into octets");
        }
        // convert the octets to integers
        var integers = pairs.map(function (p) {
            return parseInt(p, 16);
        });
        return js_sha3_1.keccak_256(new Uint8Array(integers));
    };
    Sha3Plugin.prototype.buffer_keccak_256 = function (args) {
        return js_sha3_1.keccak_256(args.message);
    };
    Sha3Plugin.prototype.keccak_224 = function (args) {
        return js_sha3_1.keccak_224(args.message);
    };
    Sha3Plugin.prototype.shake_128 = function (args) {
        return js_sha3_1.shake_128(args.message, args.outputBits);
    };
    Sha3Plugin.prototype.shake_256 = function (args) {
        return js_sha3_1.shake_256(args.message, args.outputBits);
    };
    return Sha3Plugin;
}(wrap_1.Module));
exports.Sha3Plugin = Sha3Plugin;
exports.sha3Plugin = function () {
    return {
        factory: function () { return new Sha3Plugin({}); },
        manifest: wrap_1.manifest,
    };
};
exports.plugin = exports.sha3Plugin;
//# sourceMappingURL=index.js.map