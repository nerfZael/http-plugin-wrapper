"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CodeGenerator = void 0;
var _1 = require("./");
var os_js_1 = require("@polywrap/os-js");
var path_1 = __importDefault(require("path"));
var fs_1 = require("fs");
var gluegun = __importStar(require("gluegun"));
var mustache_1 = __importDefault(require("mustache"));
var CodeGenerator = /** @class */ (function () {
    function CodeGenerator(_config) {
        this._config = _config;
        this._schema = "";
    }
    CodeGenerator.prototype.generate = function () {
        return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        // Compile the Wrapper
                        return [4 /*yield*/, this._generateCode()];
                    case 1:
                        // Compile the Wrapper
                        _a.sent();
                        return [2 /*return*/, true];
                    case 2:
                        e_1 = _a.sent();
                        gluegun.print.error(e_1);
                        return [2 /*return*/, false];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    CodeGenerator.prototype._generateCode = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, schemaComposer, project, codegenDirAbs, run;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this._config, schemaComposer = _a.schemaComposer, project = _a.project, codegenDirAbs = _a.codegenDirAbs;
                        run = function (spinner) { return __awaiter(_this, void 0, void 0, function () {
                            var language, bindLanguage, composed, abi, customScript, generator, _a, generateBinding, binding, _b, binding;
                            var _c;
                            var _this = this;
                            return __generator(this, function (_d) {
                                switch (_d.label) {
                                    case 0: return [4 /*yield*/, project.getManifestLanguage()];
                                    case 1:
                                        language = _d.sent();
                                        if (_1.isPolywrapManifestLanguage(language)) {
                                            bindLanguage = _1.polywrapManifestLanguageToBindLanguage(language);
                                        }
                                        else if (_1.isPluginManifestLanguage(language)) {
                                            bindLanguage = _1.pluginManifestLanguageToBindLanguage(language);
                                        }
                                        else if (_1.isAppManifestLanguage(language)) {
                                            bindLanguage = _1.appManifestLanguageToBindLanguage(language);
                                        }
                                        if (!bindLanguage) {
                                            throw Error(_1.intlMsg.lib_language_unsupportedManifestLanguage({
                                                language: language,
                                                supported: __spread(Object.keys(_1.polywrapManifestLanguages), Object.keys(_1.pluginManifestLanguages), Object.keys(_1.appManifestLanguages)).join(", "),
                                            }));
                                        }
                                        return [4 /*yield*/, schemaComposer.getComposedSchemas()];
                                    case 2:
                                        composed = _d.sent();
                                        if (!composed) {
                                            throw Error(_1.intlMsg.lib_codeGenerator_noComposedSchema());
                                        }
                                        abi = composed.abi;
                                        this._schema = composed.schema;
                                        if (!abi) {
                                            throw Error(_1.intlMsg.lib_codeGenerator_abiMissing());
                                        }
                                        if (!this._config.customScript) return [3 /*break*/, 9];
                                        customScript = this._config.customScript;
                                        if (!_1.isTypescriptFile(customScript)) return [3 /*break*/, 4];
                                        return [4 /*yield*/, _1.importTypescriptModule(customScript)];
                                    case 3:
                                        _a = _d.sent();
                                        return [3 /*break*/, 6];
                                    case 4: // eslint-disable-next-line @typescript-eslint/no-require-imports
                                    return [4 /*yield*/, require(customScript)];
                                    case 5:
                                        _a = _d.sent();
                                        _d.label = 6;
                                    case 6:
                                        generator = _a;
                                        if (!generator) {
                                            throw Error(_1.intlMsg.lib_codeGenerator_wrongGenFile());
                                        }
                                        generateBinding = generator.generateBinding;
                                        if (!generateBinding) {
                                            throw Error(_1.intlMsg.lib_codeGenerator_nogenerateBindingMethod());
                                        }
                                        _b = generateBinding;
                                        _c = {};
                                        return [4 /*yield*/, project.getName()];
                                    case 7: return [4 /*yield*/, _b.apply(void 0, [(_c.projectName = _d.sent(),
                                                _c.abi = abi,
                                                _c.schema = this._schema || "",
                                                _c.outputDirAbs = codegenDirAbs,
                                                _c.bindLanguage = bindLanguage,
                                                _c)])];
                                    case 8:
                                        binding = _d.sent();
                                        _1.resetDir(codegenDirAbs);
                                        os_js_1.writeDirectorySync(codegenDirAbs, binding.output, function (templatePath) {
                                            return _this._generateTemplate(templatePath, abi, spinner);
                                        });
                                        return [3 /*break*/, 11];
                                    case 9: return [4 /*yield*/, project.generateSchemaBindings(composed, path_1.default.relative(project.getManifestDir(), codegenDirAbs))];
                                    case 10:
                                        binding = _d.sent();
                                        // Output the bindings
                                        _1.resetDir(binding.outputDirAbs);
                                        os_js_1.writeDirectorySync(binding.outputDirAbs, binding.output);
                                        _d.label = 11;
                                    case 11: return [2 /*return*/];
                                }
                            });
                        }); };
                        if (!project.quiet) return [3 /*break*/, 2];
                        return [4 /*yield*/, run()];
                    case 1:
                        _b.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, _1.withSpinner(_1.intlMsg.lib_codeGenerator_genCodeText(), _1.intlMsg.lib_codeGenerator_genCodeError(), _1.intlMsg.lib_codeGenerator_genCodeWarning(), function (spinner) { return __awaiter(_this, void 0, void 0, function () {
                            return __generator(this, function (_a) {
                                return [2 /*return*/, run(spinner)];
                            });
                        }); })];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    CodeGenerator.prototype._generateTemplate = function (templatePath, config, spinner) {
        var project = this._config.project;
        if (!project.quiet && spinner) {
            var stepMessage = _1.intlMsg.lib_codeGenerator_genTemplateStep({
                path: "" + templatePath,
            });
            _1.step(spinner, stepMessage);
        }
        if (this._config.customScript) {
            // Update template path when the generation file is given
            templatePath = path_1.default.join(path_1.default.dirname(this._config.customScript), templatePath);
        }
        var template = fs_1.readFileSync(templatePath);
        var types = typeof config === "object" && config !== null ? config : { config: config };
        var content = mustache_1.default.render(template.toString(), __assign(__assign(__assign({}, types), { schema: this._schema }), this._config.mustacheView));
        content = "// " + _1.intlMsg.lib_codeGenerator_templateNoModify() + "\n\n" + content + "\n";
        return content;
    };
    return CodeGenerator;
}());
exports.CodeGenerator = CodeGenerator;
//# sourceMappingURL=CodeGenerator.js.map