"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultPluginPublishDirOption = exports.parsePluginPublishDirOption = exports.defaultPluginCodegenDirOption = exports.parsePluginCodegenDirOption = exports.defaultPluginManifestFileOption = exports.parsePluginManifestFileOption = void 0;
var intl_1 = require("../intl");
var __1 = require("../");
var system_1 = require("../system");
var path_1 = __importDefault(require("path"));
var defaultPluginPublishDir = "./build";
var defaultPluginCodegenDir = "./wrap";
function parsePluginManifestFileOption(manifestFile, _) {
    var manifestPaths = manifestFile
        ? [manifestFile]
        : __1.defaultPluginManifest;
    manifestFile = system_1.resolvePathIfExists(manifestPaths);
    if (!manifestFile) {
        console.error(intl_1.intlMsg.commands_build_error_manifestNotFound({
            paths: manifestPaths.join(", "),
        }));
        process.exit(1);
    }
    return manifestFile;
}
exports.parsePluginManifestFileOption = parsePluginManifestFileOption;
function defaultPluginManifestFileOption() {
    return parsePluginManifestFileOption(undefined, undefined);
}
exports.defaultPluginManifestFileOption = defaultPluginManifestFileOption;
function parsePluginCodegenDirOption(codegenDir, _) {
    return codegenDir
        ? path_1.default.resolve(codegenDir)
        : path_1.default.resolve(defaultPluginCodegenDir);
}
exports.parsePluginCodegenDirOption = parsePluginCodegenDirOption;
function defaultPluginCodegenDirOption() {
    return parsePluginCodegenDirOption(undefined, undefined);
}
exports.defaultPluginCodegenDirOption = defaultPluginCodegenDirOption;
function parsePluginPublishDirOption(publishDir, _) {
    return publishDir
        ? path_1.default.resolve(publishDir)
        : path_1.default.resolve(defaultPluginPublishDir);
}
exports.parsePluginPublishDirOption = parsePluginPublishDirOption;
function defaultPluginPublishDirOption() {
    return parsePluginPublishDirOption(undefined, undefined);
}
exports.defaultPluginPublishDirOption = defaultPluginPublishDirOption;
//# sourceMappingURL=plugin.js.map