"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultAppCodegenDirOption = exports.parseAppCodegenDirOption = exports.defaultAppManifestFileOption = exports.parseAppManifestFileOption = void 0;
var intl_1 = require("../intl");
var __1 = require("../");
var system_1 = require("../system");
var path_1 = __importDefault(require("path"));
var defaultAppCodegenDir = "./src/wrap";
function parseAppManifestFileOption(manifestFile, _) {
    var manifestPaths = manifestFile
        ? [manifestFile]
        : __1.defaultAppManifest;
    manifestFile = system_1.resolvePathIfExists(manifestPaths);
    if (!manifestFile) {
        console.error(intl_1.intlMsg.commands_build_error_manifestNotFound({
            paths: manifestPaths.join(", "),
        }));
        process.exit(1);
    }
    return manifestFile;
}
exports.parseAppManifestFileOption = parseAppManifestFileOption;
function defaultAppManifestFileOption() {
    return parseAppManifestFileOption(undefined, undefined);
}
exports.defaultAppManifestFileOption = defaultAppManifestFileOption;
function parseAppCodegenDirOption(codegenDir, _) {
    return codegenDir
        ? path_1.default.resolve(codegenDir)
        : path_1.default.resolve(defaultAppCodegenDir);
}
exports.parseAppCodegenDirOption = parseAppCodegenDirOption;
function defaultAppCodegenDirOption() {
    return parseAppCodegenDirOption(undefined, undefined);
}
exports.defaultAppCodegenDirOption = defaultAppCodegenDirOption;
//# sourceMappingURL=app.js.map