import { PolywrapProject, SchemaComposer } from "./";
import { PolywrapManifest } from "@polywrap/polywrap-manifest-types-js";
export interface CompilerOverrides {
    validateManifest: (manifest: PolywrapManifest) => void;
    generationSubPath: string;
}
export interface CompilerConfig {
    outputDir: string;
    project: PolywrapProject;
    schemaComposer: SchemaComposer;
}
export declare class Compiler {
    private _config;
    private _state;
    constructor(_config: CompilerConfig);
    codegen(): Promise<boolean>;
    compile(): Promise<boolean>;
    reset(): void;
    private _getCompilerState;
    private _isInterface;
    private _composeSchema;
    private _generateCode;
    private _buildModules;
    private _buildSourcesInDocker;
    private _outputComposedSchema;
    private _outputWrapManifest;
    private _outputPolywrapMetadata;
    private _validateState;
    private _validateWasmModule;
}
