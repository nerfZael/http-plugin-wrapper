import { AsciiTree } from "./asciiTree";
import { Uri } from "@polywrap/core-js";
import { GluegunPrint } from "gluegun";
export interface Deployer {
    execute(uri: Uri, config?: unknown): Promise<Uri>;
}
interface List {
    name: string;
    children: List[];
}
interface ResultList {
    name: string;
    result: string;
    children: ResultList[];
}
interface Handler {
    addNext(handler: Handler): void;
    handle(params: Uri): Promise<Uri[]>;
}
declare abstract class AbstractHandler implements Handler {
    name: string;
    private dependencyTree;
    private nextHandlers;
    protected result: string;
    constructor(name: string);
    addNext(handler: AbstractHandler): void;
    handle(uri: Uri): Promise<Uri[]>;
    getList(): List;
    getDependencyTree(): AsciiTree;
    getResultsList(): ResultList;
}
export declare class DeployerHandler extends AbstractHandler {
    private deployer;
    private config;
    private printer;
    constructor(name: string, deployer: Deployer, config: unknown, printer: GluegunPrint);
    handle(uri: Uri): Promise<Uri[]>;
}
export {};
