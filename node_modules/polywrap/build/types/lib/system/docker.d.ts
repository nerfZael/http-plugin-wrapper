import { FileLock } from "./";
export declare function isDockerInstalled(): boolean;
export declare function getDockerFileLock(): FileLock;
export declare function isDockerBuildxInstalled(): Promise<boolean>;
export declare function copyArtifactsFromBuildImage(outputDir: string, buildArtifact: string, imageName: string, removeBuilder?: boolean, removeImage?: boolean, useBuildx?: boolean, quiet?: boolean): Promise<void>;
export declare function createBuildImage(rootDir: string, imageName: string, dockerfile: string, cacheDir?: string, useBuildx?: boolean, quiet?: boolean): Promise<string>;
export declare function generateDockerfile(templatePath: string, config: Record<string, unknown>): string;
export declare function generateDockerImageName(uuid: string): string;
interface DockerCompose {
    services: {
        [key: string]: {
            build?: string | {
                context: string;
            };
        };
    };
}
export declare function correctBuildContextPathsFromCompose(dockerComposePath: string): DockerCompose;
export {};
